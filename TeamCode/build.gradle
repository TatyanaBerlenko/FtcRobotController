plugins {
    id 'com.android.library'
    id 'com.github.spotbugs'
    id 'checkstyle'
}


apply from: '../build.dependencies.gradle'

android {
    namespace 'org.firstinspires.ftc.teamcode'

    compileSdk 36
    buildToolsVersion '29.0.3'

    defaultConfig {
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    packagingOptions {
        jniLibs.useLegacyPackaging = true
    }

    buildTypes {
        debug   { debuggable true }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lint { disable 'Instantiatable' }
}

dependencies {
    implementation project(':FtcRobotController')

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'org.apache.commons:commons-compress:1.26.0'

    testImplementation       'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

spotbugs {
    toolVersion = '4.9.3'
    ignoreFailures = false
}
tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    classDirs  = files(android.sourceSets.main.java.srcDirs)
    sourceDirs = files(android.sourceSets.main.java.srcDirs)
    reports {
        html.required.set(true)
        html.outputLocation.set(file("$buildDir/reports/spotbugs/debug.html"))
    }
}

checkstyle {
    toolVersion = '10.23.1'
    configFile  = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

tasks.register('checkstyleDebug', Checkstyle) {
    group 'verification'; description 'Runs Checkstyle on Debug sources'
    classpath = files()
    source    = files(android.sourceSets.main.java.srcDirs,
            android.sourceSets.debug.java.srcDirs)
    configFile = checkstyle.configFile
    reports { html.required = true; xml.required = false }
}

tasks.register('checkstyleRelease', Checkstyle) {
    group 'verification'; description 'Runs Checkstyle on Release sources'
    classpath = files()
    source    = files(android.sourceSets.main.java.srcDirs,
            android.sourceSets.debug.java.srcDirs)
    configFile = checkstyle.configFile
    reports { html.required = true; xml.required = false }
}

afterEvaluate {
    tasks.named('assembleDebug').configure {
        dependsOn 'checkstyleDebug', 'spotbugsDebug'
    }
    tasks.named('assembleRelease').configure {
        dependsOn 'checkstyleRelease', 'spotbugsRelease'
    }
}