name: FTC Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write       # для gh-pages
  id-token: write    # OIDC – deploy-pages

env:
  MODULES: TeamCode FtcRobotController   # чтобы не дублировать список

jobs:
# ────────────────────────────────────────────────────────────────────────────────
  build_and_analyze:
    name: Build APK + Run static analysis + Publish HTML reports
    runs-on: ubuntu-latest

    steps:
    # ───── Source ───────────────────────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ───── Toolchain ────────────────────────────────────────────────────────────
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Accept Android SDK licences
      run: yes | sdkmanager --licenses

    # ───── Build & Static analysis ──────────────────────────────────────────────
    - name: Run SpotBugs
      run: ./gradlew :TeamCode:spotbugsDebug || true

    - name: Run Checkstyle
      run: ./gradlew :TeamCode:checkstyleDebug || true

    - name: Run Android Lint
      run: ./gradlew :FtcRobotController:lintDebug || true

    - name: Assemble debug APK
      run: ./gradlew :FtcRobotController:assembleDebug

    # ───── Collect HTML reports for GitHub Pages ────────────────────────────────
    - name: Collect HTML reports
      if: always()
      run: |
        REPORTS_DIR=pages
        mkdir -p "$REPORTS_DIR"

        for m in $MODULES; do
          if [ -d "$m/build/reports" ]; then
            # копируем всё содержимое reports/ в pages/<Module>/…
            rsync -a "$m/build/reports/" "$REPORTS_DIR/$m/"
          fi
        done

        # ── индексный файл ──────────────────────────────────────────────────────
        cat >"$REPORTS_DIR/index.html" <<'EOF'
        <!doctype html><html lang="en"><meta charset="utf-8">
        <h1>FTC Android CI Reports</h1>
        <ul>
          <li><a href="FtcRobotController/lint-results-debug.html">Lint (app)</a></li>
          <li><a href="TeamCode/checkstyle/debug.html">Checkstyle (TeamCode)</a></li>
          <li><a href="TeamCode/spotbugs/debug.html">SpotBugs (TeamCode)</a></li>
        </ul>
        EOF
        touch "$REPORTS_DIR/.nojekyll"

    # ───── Debug: покажем, что именно попадёт в artefact (можно удалить позже) ──
    - name: Debug — list collected files
      if: always()
      run: |
        echo '=== pages artefact ==='
        find pages -type f -maxdepth 3

    # ───── Upload artefacts ─────────────────────────────────────────────────────
    - name: Upload Pages artefact
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: FtcRobotController-debug-apks
        path: FtcRobotController/build/outputs/apk/debug/*.apk

# ────────────────────────────────────────────────────────────────────────────────
  deploy_pages:
    name: Deploy GitHub Pages
    needs: build_and_analyze
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Configure Pages (one-time; safe to keep)
      uses: actions/configure-pages@v4

    - id: deployment
      name: Deploy
      uses: actions/deploy-pages@v4
